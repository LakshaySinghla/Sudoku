#include<iostream.h>
#include<conio.h>
#include<stdio.h>
#include<fstream.h>
class save{
		int b[9][9];
	public:
   	int in(int r1,int c1)
      {  return b[r1][c1];
      }
      void out(int ch1,int r1,int c1)
      {  b[r1][c1]=ch1;
      }
}s1;
void main()
{
char ch;
int pos,r,c,a[9][9];
ofstream fout;
ifstream fin;
do{
fout.open("put.dat",ios::app ,ios::binary);       //put 1st sudoku
/*for(r=0;r<9;r++)                                  //in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][0]=-2 ; a[0][3]=-4 ; a[0][6]=-1 ;
a[0][8]=-8 ; a[1][5]=-6 ; a[1][6]=-7 ;
a[2][4]=-5 ; a[2][5]=-8 ; a[2][7]=-4 ;
a[2][8]=-6 ; a[3][0]=-1 ; a[3][4]=-7 ;
a[3][7]=-2 ; a[4][1]=-2 ; a[4][2]=-5 ;
a[4][6]=-9 ; a[4][7]=-7 ; a[5][1]=-6 ;
a[5][4]=-4 ; a[5][8]=-3 ; a[6][0]=-6 ;
a[6][1]=-7 ; a[6][3]=-3 ; a[6][4]=-1 ;
a[7][2]=-2 ; a[7][3]=-6 ; a[8][0]=-8 ;
a[8][2]=-1 ; a[8][5]=-4 ; a[8][8]=-2 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*for(r=0;r<9;r++)                                    //put 2nd sudoku
	for(c=0;c<9;c++)                                   //in put file
   	a[r][c]=0;
a[0][4]=-7 ; a[0][6]=-1 ; a[1][3]=-9 ;
a[1][8]=-2 ; a[2][0]=-3 ; a[2][1]=-4 ;
a[2][5]=-8 ; a[3][0]=-6 ; a[3][1]=-7 ;
a[3][2]=-1 ; a[3][7]=-2 ; a[4][2]=-5 ;
a[4][4]=-1 ; a[4][6]=-9 ; a[5][1]=-2 ;
a[5][6]=-6 ; a[5][7]=-8 ; a[5][8]=-1 ;
a[6][3]=-6 ; a[6][7]=-4 ; a[6][8]=-9 ;
a[7][0]=-5 ; a[7][5]=-9 ; a[8][2]=-6 ;
a[8][4]=-8 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*for(r=0;r<9;r++)
	for(c=0;c<9;c++)                                  //put 3rd sudoku
   	a[r][c]=0;                                     //put file
a[0][2]=-3 ; a[0][5]=-8 ; a[0][6]=-9 ;
a[1][3]=-9 ; a[1][6]=-6 ; a[2][2]=-8 ;
a[2][3]=-5 ; a[2][5]=-4 ; a[2][7]=-3 ;
a[3][0]=-8 ; a[3][2]=-2 ; a[4][1]=-1 ;
a[4][3]=-3 ; a[4][5]=-7 ; a[4][7]=-8 ;
a[5][6]=-4 ; a[5][8]=-6 ; a[6][1]=-6 ;
a[6][3]=-4 ; a[6][5]=-5 ; a[6][6]=-1 ;
a[7][2]=-4 ; a[7][5]=-3 ; a[8][2]=-9 ;
a[8][3]=-1 ; a[8][6]=-3 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*
for(r=0;r<9;r++)                                //put 4th sudoku in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][2]=-1 ; a[0][3]=-5 ; a[1][1]=-8 ;
a[1][5]=-3 ; a[1][6]=-1 ; a[1][7]=-4 ;
a[2][1]=-4 ; a[2][4]=-8 ; a[2][8]=-3 ;
a[3][1]=-7 ; a[3][4]=-5 ; a[3][8]=-8 ;
a[4][2]=-6 ; a[4][3]=-9 ; a[4][5]=-8 ;
a[4][6]=-3 ; a[5][0]=-3 ; a[5][4]=-2 ;
a[5][7]=-5 ; a[6][0]=-5 ; a[6][4]=-7 ;
a[6][7]=-1 ; a[7][1]=-2 ; a[7][2]=-7 ;
a[7][3]=-1 ; a[7][7]=-9 ; a[8][5]=-4 ;
a[8][6]=-5 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*
for(r=0;r<9;r++)                                  //5th sudoku in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][0]=-8 ; a[0][1]=-5 ; a[0][5]=-2 ;
a[0][6]=-4 ; a[1][0]=-7 ; a[1][1]=-2 ;
a[1][8]=-9 ; a[2][2]=-4 ; a[3][3]=-1 ;
a[3][5]=-7 ; a[3][8]=-2 ; a[4][0]=-3 ;
a[4][2]=-5 ; a[4][6]=-9 ; a[5][1]=-4 ;
a[6][4]=-8 ; a[6][7]=-7 ; a[7][1]=-1 ;
a[7][2]=-7 ; a[8][4]=-3 ; a[8][5]=-6 ;
a[8][7]=-4 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*for(r=0;r<9;r++)                                  //6th sudoku in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][1]=-6 ; a[0][2]=-1 ; a[0][5]=-7 ;
a[0][8]=-3 ; a[1][1]=-9 ; a[1][2]=-2 ;
a[1][5]=-3 ; a[3][2]=-8 ; a[3][3]=-5 ;
a[3][4]=-3 ; a[4][6]=-5 ; a[4][8]=-4 ;
a[5][0]=-5 ; a[5][5]=-8 ; a[6][1]=-4 ;
a[6][8]=-1 ; a[7][3]=-1 ; a[7][4]=-6 ;
a[7][6]=-8 ; a[8][0]=-6 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*
for(r=0;r<9;r++)                                  //7th sudoku in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][0]=-4 ; a[0][2]=-5 ; a[0][5]=-8 ;
a[0][7]=-2 ; a[1][3]=-1 ; a[2][1]=-2 ;
a[2][4]=-6 ; a[2][5]=-9 ; a[2][7]=-9 ;
a[3][2]=-8 ; a[3][7]=-3 ; a[4][0]=-5 ;
a[4][2]=-6 ; a[4][6]=-2 ; a[4][8]=-1 ;
a[5][1]=-1 ; a[5][6]=-4 ; a[6][1]=-8 ;
a[6][3]=-9 ; a[6][4]=-7 ; a[6][7]=-6 ;
a[7][5]=-1 ; a[8][1]=-9 ; a[8][3]=-8 ;
a[8][6]=-5 ; a[8][8]=-7 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/
/*
for(r=0;r<9;r++)                                  //8th sudoku in put file
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][2]=-9 ; a[0][3]=-5; a[0][6]=-2 ;
a[1][1]=-4 ; a[1][4]=-1 ; a[1][7]=-6 ;
a[2][0]=-2 ; a[2][5]=-3 ; a[2][8]=-9 ;
a[3][2]=-8 ; a[3][8]=-2 ; a[4][1]=-7 ;
a[4][7]=-4 ; a[5][0]=-3 ; a[5][6]=-5 ;
a[6][0]=-7 ; a[6][3]=-2 ; a[6][8]=-3 ;
a[7][1]=-6 ; a[7][4]=-4 ; a[7][7]=-7 ;
a[8][2]=-1 ; a[8][5]=-9 ; a[8][6]=-6 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
*/

cout<<fout.tellp()<<" ";
fout.write((char*)&s1,sizeof(s1));
cout<<fout.tellp();
fout.close();



/*
fin.open("put.dat" , ios::app , ios::binary);       //check data in
for(int i=0;i<3;i++)                                //put file
{	cout<<fin.tellg()<<" ";
	fin.read((char*)&s1,sizeof(s1));
	cout<<fin.tellg()<<" ";
}
fin.close();
*/
/*
fout.open("save.dat" ,ios::binary);              //put sudoku in
for(r=0;r<9;r++)                                 //save file for new player
	for(c=0;c<9;c++)
   	a[r][c]=0;
a[0][0]=-2 ; a[0][3]=-4 ; a[0][6]=-1 ;
a[0][8]=-8 ; a[1][5]=-6 ; a[1][6]=-7 ;
a[2][4]=-5 ; a[2][5]=-8 ; a[2][7]=-4 ;
a[2][8]=-6 ; a[3][0]=-1 ; a[3][4]=-7 ;
a[3][7]=-2 ; a[4][1]=-2 ; a[4][2]=-5 ;
a[4][6]=-9 ; a[4][7]=-7 ; a[5][1]=-6 ;
a[5][4]=-4 ; a[5][8]=-3 ; a[6][0]=-6 ;
a[6][1]=-7 ; a[6][3]=-3 ; a[6][4]=-1 ;
a[7][2]=-2 ; a[7][3]=-6 ; a[8][0]=-8 ;
a[8][2]=-1 ; a[8][5]=-4 ; a[8][8]=-2 ;
for(r=0;r<9;r++)
	for(c=0;c<9;c++)
   	s1.out(a[r][c],r,c);
cout<<fout.tellp()<<" ";
fout.write((char*)&s1,sizeof(s1));
cout<<fout.tellp();
fout.close();
*/
/*
fin.open("save.dat" , ios::app , ios::binary);      //check data in
for(;!fin.eof();)                                 //save file
{
fin.read((char*)&s1,sizeof(s1));
if(fin.eof()) break;
cout<<fin.tellg()<<" ";
}
fin.close();
*/

cout<<"\nDo you want to play again?(y/n) ";
cin>>ch;
}while(ch=='y');
}//main
